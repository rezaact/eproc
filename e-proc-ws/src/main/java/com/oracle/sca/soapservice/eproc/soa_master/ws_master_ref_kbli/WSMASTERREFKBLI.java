
package com.oracle.sca.soapservice.eproc.soa_master.ws_master_ref_kbli;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WS_MASTER_REF_KBLI", targetNamespace = "http://oracle.com/sca/soapservice/Eproc/SOA_Master/WS_MASTER_REF_KBLI", wsdlLocation = "http://192.168.69.203:8001/soa-infra/services/latihan/SOA_Master/WS_MASTER_REF_KBLI?WSDL")
public class WSMASTERREFKBLI
    extends Service
{

    private final static URL WSMASTERREFKBLI_WSDL_LOCATION;
    private final static WebServiceException WSMASTERREFKBLI_EXCEPTION;
    private final static QName WSMASTERREFKBLI_QNAME = new QName("http://oracle.com/sca/soapservice/Eproc/SOA_Master/WS_MASTER_REF_KBLI", "WS_MASTER_REF_KBLI");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://192.168.69.203:8001/soa-infra/services/latihan/SOA_Master/WS_MASTER_REF_KBLI?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WSMASTERREFKBLI_WSDL_LOCATION = url;
        WSMASTERREFKBLI_EXCEPTION = e;
    }

    public WSMASTERREFKBLI() {
        super(__getWsdlLocation(), WSMASTERREFKBLI_QNAME);
    }

    public WSMASTERREFKBLI(WebServiceFeature... features) {
        super(__getWsdlLocation(), WSMASTERREFKBLI_QNAME, features);
    }

    public WSMASTERREFKBLI(URL wsdlLocation) {
        super(wsdlLocation, WSMASTERREFKBLI_QNAME);
    }

    public WSMASTERREFKBLI(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WSMASTERREFKBLI_QNAME, features);
    }

    public WSMASTERREFKBLI(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSMASTERREFKBLI(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ExecutePtt
     */
    @WebEndpoint(name = "execute_pt")
    public ExecutePtt getExecutePt() {
        return super.getPort(new QName("http://oracle.com/sca/soapservice/Eproc/SOA_Master/WS_MASTER_REF_KBLI", "execute_pt"), ExecutePtt.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ExecutePtt
     */
    @WebEndpoint(name = "execute_pt")
    public ExecutePtt getExecutePt(WebServiceFeature... features) {
        return super.getPort(new QName("http://oracle.com/sca/soapservice/Eproc/SOA_Master/WS_MASTER_REF_KBLI", "execute_pt"), ExecutePtt.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WSMASTERREFKBLI_EXCEPTION!= null) {
            throw WSMASTERREFKBLI_EXCEPTION;
        }
        return WSMASTERREFKBLI_WSDL_LOCATION;
    }

}
